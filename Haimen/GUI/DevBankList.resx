<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="barManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbMerger.Glyph" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>